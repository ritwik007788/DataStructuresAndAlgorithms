// gfg : Remove loop in Linked List 


************************************************************
CONSIDER A TESTCASE WHERE THE LOOP IS DEFINED ON THE HEAD NODE 

1 -> 2 -> 3 
^         |
|         |
-- 4 <----

************************************************************

/*
class Node
{
    int data;
    Node next;
}
*/

class Solution
{
    //Function to remove a loop in the linked list.
    public static void removeLoop(Node head){
        // code here
        // remove the loop without losing any nodes
        Node same = checkLoop(head); // return the same node 
        Node p = head;
        
        if(same != null){ // if loop is absent same = null
           while(p != same){ // first find the colliding node
            p=p.next;
            same=same.next;
            }
           while(p != same.next){ // then iterate same to find the last node of the non -  circular linked List
            same = same.next;
            }

            same.next = null; // make the LinkedList non-circular
        }
        
    }
    
    public static Node checkLoop(Node head){
        Node i = head;
        Node j = head;
        if(head==null) return null;
        
        while(j.next!=null && j.next.next !=null){
            i = i.next;
            j= j.next.next;
            
            if(i==j) return i;
            
        }
        return null;
    }
}
